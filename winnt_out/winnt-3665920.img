s) == ""
                    set NetworkAddress = "000000000000"
                endif
                ui pop 1
                Shell $(UtilityInf), GetBusTypeNum
                set BusTypeNum = $($R1)
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    Debug-Output "ShellCode error."
                    goto ShellCodeError
                endif
                set NewValueList = {{CardType,$(NoTitle),$(!REG_VT_DWORD),2},+
                                   {BusType,$(NoTitle),$(!REG_VT_DWORD),$(BusTypeNum)},+
                                   {McaPosId,$(NoTitle),$(!REG_VT_DWORD),$(McaPosId)},+
                                   {MediaType,$(NoTitle),$(!REG_VT_DWORD),2},+
                                   {NetworkAddress,$(NoTitle),$(!REG_VT_SZ),$(NetworkAddress)},+
{PacketSize,$(NoTitle),$(!REG_VT_DWORD),$(Packet_Number)},+
{CardSpeed,$(NoTitle),$(!REG_VT_DWORD),$(CardSpeed)},+
{BusNumber,$(NoTitle),$(!REG_VT_DWORD),$(BusNum)},+
{SlotNumber,$(NoTitle),$(!REG_VT_DWORD),$(SlotNum)}}
                Shell  $(UtilityInf), AddValueList, $(HardParameterKey), $(NewValueList)
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    goto ShellCodeError
                endif
                ifstr(i) $(!STF_GUI_UNATTENDED) == "YES"
                    Shell $(UtilityInf),AddDefaultNetCardParameters,$(HardParameterKey)
                endif
                set TempProdName = """"$(ProductHardwareName)$(AdapterNumber)""""
                set TempBindForm = $(TempProdName)$(NetRuleHardwareBindForm)
                set NewValueList = {{type,$(NoTitle),$(!REG_VT_SZ),$(NetRuleHardwareType)},+
{bindform,$(NoTitle),$(!REG_VT_SZ),$(TempBindForm)}, +
{class,$(NoTitle),$(!REG_VT_MULTI_SZ),$(NetRuleHardwareClass)}, +
{InfOption,$(NoTitle),$(!REG_VT_SZ),$(Option)}}
               Shell  $(UtilityInf), AddValueList, $(HardNetRuleKey), $(NewValueList)
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    goto ShellCodeError
                endif
                CloseRegKey $(HardNetCardKey)
                CloseRegKey $(HardNetRuleKey)
                CloseRegKey $(HardParameterKey)
        endif
    EndForListDo
    goto writeparameters
writeparameters = +
    EndWait
    goto successful
bindingadapter =+
    set Error = "Binding: Sorry, not yet implemented."
    goto fatal
removeadapter = +
    Ifstr(i) $(ProductKeyName) == $(!NTN_RegBase)
        Shell $(UtilityInf), RemoveSoftwareComponent, $(Manufacturer), +
            $(ProductSoftwareName)
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            Debug-Output "ShellCode error"
            goto ShellCodeError
        endif
        set RegistryErrorIndex = $($R0)
        Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
            goto fatalregistry
        endif
    else
        Shell $(UtilityInf), RemoveHardwareComponent, $(Manufacturer), +
            $(ProductSoftwareName), $(!NTN_RegBase)
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            Debug-Output "ShellCode error"
            goto ShellCodeError
        endif
        set RegistryErrorIndex = $($R0)
        Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
            goto fatalregistry
        endif
    endif
    goto end
UpgradeSoftware = +
    ifstr(i) $(ProductKeyName) == $(!NTN_RegBase)
        OpenRegKey $(!REG_H_LOCAL) "" $(ProductKeyName) $(MAXIMUM_ALLOWED) KeyProduct
        Ifstr $(KeyProduct) != $(KeyNull)
            GetRegValue $(KeyProduct), "MajorVersion", VersionInfo
            set Version = *($(VersionInfo), 4)
            Shell $(UtilityInf), GetInfFileNameFromRegistry, $(KeyProduct)
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "ShellCode error"
                goto ShellCodeError
            endif
            set !UG_Filename = $($R0)
            ifstr(i) $(!UG_Filename) != ""
                install "Install-Update"
                ifstr(i) $(STF_INSTALL_OUTCOME) != STF_SUCCESS
                    goto fatal
      