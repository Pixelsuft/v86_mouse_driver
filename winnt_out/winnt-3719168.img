ProductSoftwareName)},+
                           {InstallDate,$(NoTitle),$(!REG_VT_DWORD),*($(Now),1)}}
        Shell  $(UtilityInf), AddValueList, $(SoftProductKey), $(NewValueList)
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            goto ShellCodeError
        endif
        set RegistryErrorIndex = $($R0)
        Ifstr(i) $(RegistryErrorIndex) != "NO_ERROR"
            EndWait
            CloseRegKey $(SoftProductKey)
            CloseRegKey $(SoftNetRuleKey)
            CloseRegKey $(SoftServiceKey)
            CloseRegKey $(SoftParameterKey)
            CloseRegKey $(SoftLinkageKey)
            goto fatalregistry
        endif
        set NewValueList = {{type,$(NoTitle),$(!REG_VT_SZ),$(NetRuleSoftwareType)},+
                            {use,$(NoTitle),$(!REG_VT_SZ),$(NetRuleSoftwareUse)}, +
                            {bindform,$(NoTitle),$(!REG_VT_SZ),$(NetRuleSoftwareBindForm)}, +
                            {class,$(NoTitle),$(!REG_VT_MULTI_SZ),$(NetRuleSoftwareClass)}, +
                            {bindable,$(NoTitle),$(!REG_VT_MULTI_SZ),$(NetRuleSoftwareBindable)}, +
                            {InfOption,$(NoTitle),$(!REG_VT_SZ),$(Option)}}
        Shell  $(UtilityInf), AddValueList, $(SoftNetRuleKey), $(NewValueList)
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            goto ShellCodeError
        endif
        set RegistryErrorIndex = $($R0)
        CloseRegKey $(SoftProductKey)
        CloseRegKey $(SoftNetRuleKey)
        CloseRegKey $(SoftServiceKey)
        CloseRegKey $(SoftParameterKey)
        CloseRegKey $(SoftLinkageKey)
        Ifstr(i) $(RegistryErrorIndex) != "NO_ERROR"
            EndWait
            goto fatalregistry
        endif
    endif
    ForListDo $(AdapterList)
        set BusNum = *($($),1)
        set SlotNum = *($($),2)
        set McaPosId = *($($),3)
        Debug-Output $(BusNum)
        Debug-Output $(SlotNum)
        Shell $(UtilityInf), IsNetCardAlreadyInstalled, $(BusNum), +
            $(SlotNum), $(ProductHardwareDescription), $(ProductHardwareName)
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            goto ShellCodeError
        endif
        ifstr $($R0) != "NO_ERROR"
            set Error = $($R0)
            goto fatal
        endif
        ifstr(i) $($R1) != "YES"
                Shell $(UtilityInf), AddHardwareComponent, $(ProductHardwareName),$(STF_CONTEXTINFNAME),$(ProductKeyName)
                ifint $($R4) != -1
                    Set OEM_ABANDON_OPTIONS = >($(OEM_ABANDON_OPTIONS), $(!NTN_SoftwareBase)"\Microsoft\Windows NT\CurrentVersion\NetworkCards\"$($R4))
                endif
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    goto ShellCodeError
                endif
                set RegistryErrorIndex = $($R0)
                Ifstr(i) $(RegistryErrorIndex) != "NO_ERROR"
                    EndWait
                    CloseRegKey $($R1)
                    CloseRegKey $($R2)
                    CloseRegKey $($R3)
                    goto fatalregistry
                endif
                Set HardNetCardKey      = $($R1)
                Set HardNetRuleKey      = $($R2)
                Set HardParameterKey    = $($R3)
                set AdapterNumber       = $($R4)
                ifint $(McaPosId) != 24863
                    set OpSupport = $(ProductOtherOpSupport)
                else
                    set OpSupport = $(ProductOpSupport)
                endif
                set NewValueList = {{Manufacturer,$(NoTitle),$(!REG_VT_SZ),$(Manufacturer)},+
                                   {Title,$(NoTitle),$(!REG_VT_SZ),"["$($R4)"] "$(ProductHardwareTitle)},+
                                   {Description,$(NoTitle),$(!REG_VT_SZ),$(ProductHardwareDescription)},+
                                   {ProductName,$(NoTitle),$(!REG_VT_SZ),$(ProductHardwareName)},+
                                   {ServiceName,$(NoTitle),$(!REG_VT_SZ),$($R5)},+
                                   {OperationsSupport,$(NoTitle),$(!REG_VT_DWO