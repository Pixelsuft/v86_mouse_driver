sent
	ifstr(i) $(STATUS) == "YES"
	    set-add Num = $(Num) 1
	    goto nextinf
	else
	    goto copyinf
	endif
    endif
    goto finish
copyinf = +
    Shell $(UtilityInf), DoAskSource, $(!STF_CWDDIR), $(SrcDir) YES
    Ifint $($ShellCode) != $(!SHELL_CODE_OK)
	Goto ShellCodeError
    Else-Ifstr(i) $($R0) == STATUS_FAILED
	Shell $(UtilityInf) RegistryErrorString "ASK_SOURCE_FAIL"
	ifint $($ShellCode) != $(!SHELL_CODE_OK)
	    goto ShellCodeError
	endif
	set Error = $($R0)
	Goto fatal
    Else-Ifstr(i) $($R0) == STATUS_USERCANCEL
	Goto finish
    Endif
    Split-String $($R1), "\", lSrcDirParts
    QueryListSize cSrcDirParts $(lSrcDirParts)
    ifstr(i) *($(lSrcDirParts),$(cSrcDirParts)) != "\"
        Set SrcDir = $($R1)"\"
    else
        Set SrcDir = $($R1)
    Endif
    ifint $(cSrcDirParts) >= 3 
        debug-output "OEMNADZZ.INF: checking to remove platform"
        ifstr(i) *($(lSrcDirParts),$(cSrcDirParts)) == "\"
            set-sub iStopParts = $(cSrcDirParts), 2
        else
            set-sub iStopParts = $(cSrcDirParts), 1
        endif
        debug-output "OEMNADZZ.INF: parts were "$(cSrcDirParts)" and stops at "$(iStopParts)
        set SrcDirMin = ""
        set SkipAppend = FALSE
        ForListDo $(lSrcDirParts)
            ifint $(#) > $(iStopParts)
                ifstr(i) $($) == $(!STF_PLATFORM)
                    set SkipAppend = TRUE
                    debug-output "OEMNADZZ.INF: skipping appended"$($)
                    goto skip_appending_list_item
                else
                    ifstr(i) $(SkipAppend) == TRUE
                        debug-output "OEMNADZZ.INF: skipping appended"$($)
                        goto skip_appending_list_item
                    endif
                endif
            endif
            set NewSrcDir = $(SrcDirMin)$($)
            set SrcDirMin = $(NewSrcDir)
            debug-output "OEMNADZZ.INF: appended items "$(SrcDirMin)
skip_appending_list_item = +            
        EndForListDo
    else
        debug-output "OEMNADZZ.INF: path too small to have platform"
        set SrcDirMin = *($(lSrcDirParts),1)"\"
    endif
    debug-output "OEMNADZZ.INF: SrcDirMin : "$(SrcDirMin)
    set DiskLocation = $(SrcDirMin)
    debug-output "OEMNADZZ.INF: SrcDir : "$(SrcDir)
    set OemSrc = $(SrcDir)*($(FileNameList), ~($(OptionList), $(Option)))
    set OemDst = $(!STF_WINDOWSSYSPATH)"\"$(OemFileName)
    set FileToCheck = $(OemSrc)
    install Install-SeeIfFileIsPresent
    ifstr(i) $(STATUS) != "YES"
        set File1 = $(OemSrc)
        set OemSrc = $(SrcDirMin)*($(FileNameList), ~($(OptionList), $(Option)))
        set FileToCheck = $(OemSrc)
        install Install-SeeIfFileIsPresent
        ifstr(i) $(STATUS) != "YES"
            set FileToCheck = $(DiskLocation)"oemsetup.inf"
	        install Install-SeeIfFileIsPresent
	        ifstr(i) $(STATUS) == "YES"
	            set OemSrc = $(FileToCheck)
	            goto InstallINF
        	endif
        	set FileToCheck = $(DiskLocation)"oemsetnt.inf"
	        install Install-SeeIfFileIsPresent
	        ifstr(i) $(STATUS) == "YES"
	            set OemSrc = $(FileToCheck)
	            goto InstallINF
	        endif
	        set File2 = $(OemSrc)
	        set File3 = $(DiskLocation)"\oemsetup.inf"
	        set File4 = $(DiskLocation)"\oemsetnt.inf"
	        read-syms ErrorMsg$(!STF_LANGUAGE)
	        set DlgText = $(CannotFindOemsetup)
	        Shell "Subroutn.Inf" SetupMessage $(!STF_LANGUAGE) "NONFATAL" $(DlgText)
            Set !STF_SRCDIR_OVERRIDE = ""
	        goto copyinf
        endif
    endif
InstallINF = +
    install Install-OemINF
    Split-String $(OemSrc), "\", OemSrcInfo
    QueryListSize ListSize $(OemSrcInfo)
    set-sub ListSize = $(ListSize) 2
    set Count = 0
    set SrcDir = ""
SrcDirLoop = +
    set-add Count = $(Count) 1 
    set SrcDir = $(SrcDir)*($(OemSrcInfo),$(Count))
    ifint $(Count) != $(ListSize)
	goto SrcDirLoop
    endif
    debug-output $(SrcDir)
    set !STF_SRCDIR_O