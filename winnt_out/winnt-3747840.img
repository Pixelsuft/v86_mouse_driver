NCDETINFO),6)
    endif
adapterverify =+
    Ifstr(i) $(DetectedCard) != TRUE
        Goto skipoptions
    Endif
    Debug-Output "OEMNADN2.INF: Calling Param_VerifyCard"
    Shell $(ParamInf) Param_VerifyCard $(!STF_NCDETCARD)
    Ifstr(i) $($R0) == STATUS_SUCCESSFUL
        Debug-Output "OEMNADN2.INF: Param_VerifyCard succeeded"
        Goto skipoptions
    Endif
    Set from = adapteroptions
    Set to = skipoptions
    Shell $(UtilityInf),RegistryErrorString,VERIFY_WARNING
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
        Debug-Output "ShellCode error: cannot get an error string."
        goto ShellCodeError
    endif
    set Error = $($R0)
    Goto Warning
skipoptions =+
    ifint $(OldVersionExisted) == $(TRUE)
        ifstr(i) $(!NTN_InstallMode) == configure
                goto writeparameters
        endif
    endif
    StartWait
    ifint $(OldVersionExisted) == $(FALSE)
        ifstr(i) $(!NTN_InstallMode) == "install"
                Ifstr(i) $(DoCopy) == "YES"
                    Shell $(UtilityInf), DoAskSource, $(!STF_CWDDIR), $(SrcDir) YES
                    Ifint $($ShellCode) != $(!SHELL_CODE_OK)
                        Goto ShellCodeError
                    Else-Ifstr(i) $($R0) == STATUS_FAILED
                        Shell $(UtilityInf) RegistryErrorString "ASK_SOURCE_FAIL"
                        ifint $($ShellCode) != $(!SHELL_CODE_OK)
                           goto ShellCodeError
                        endif
                        set Error = $($R0)
                        Goto fatal
                    Else-Ifstr(i) $($R0) == STATUS_USERCANCEL
                        Goto successful
                    Endif
                    Set SrcDir = $($R1)
                Endif
                install "Install-Option"
                ifstr(i) $(STF_INSTALL_OUTCOME) != STF_SUCCESS
                    Shell $(UtilityInf) RegistryErrorString "UNABLE_COPY_FILE"
                    ifint $($ShellCode) != $(!SHELL_CODE_OK)
                        goto ShellCodeError
                    endif
                    set Error = $($R0)
                    goto fatal
                endif
        endif
       Shell $(UtilityInf), AddSoftwareComponent, $(Manufacturer), +
                        $(ProductSoftwareName), +
                        $(ProductSoftwareName), +
                        $(ProductSoftwareTitle), $(STF_CONTEXTINFNAME), +
                        $(ProductSoftwareImagePath), "kernel", "NDIS", {}, "",+
                        $(NetEventDLL)
       Set OEM_ABANDON_SOFTWARE = TRUE
       ifint $($ShellCode) != $(!SHELL_CODE_OK)
        Debug-Output "ShellCode error"
        goto ShellCodeError
       endif
       set RegistryErrorIndex = $($R0)
       set KeyProduct      = $($R1)
       Set SoftNetRulesKey = $($R2)
       CloseRegKey $($R3)
       CloseRegKey $($R4)
       CloseRegKey $($R5)
       Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
        EndWait
        Debug-Output "Registry error: add software components"
        CloseRegKey $(KeyProduct)
        CloseRegKey $(SoftNetRulesKey)
        goto fatalregistry
       endif
       set NewValueList = {{SoftwareType,$(NoTitle),$(!REG_VT_SZ),$(SoftwareType)},+
                   {MajorVersion,$(NoTitle),$(!REG_VT_DWORD),$(ProductMajorVersion)},+
                   {MinorVersion,$(NoTitle),$(!REG_VT_DWORD),$(ProductMinorVersion)},+
                   {Title,$(NoTitle),$(!REG_VT_SZ),$(ProductSoftwareTitle)},+
                   {Description,$(NoTitle),$(!REG_VT_SZ),$(ProductSoftwareDescription)},+
                   {ServiceName,$(NoTitle),$(!REG_VT_SZ),$(ProductSoftwareName)},+
                   {InstallDate,$(NoTitle),$(!REG_VT_DWORD),*($(Now),1)}}
       Shell  $(UtilityInf), AddValueList, $(KeyProduct), $(NewValueList)
       ifint $($ShellCode) != $(!SHELL_CODE_OK)
        Debug-Output "ShellCode error."
        goto ShellCodeError
       endif
       set RegistryErrorIndex = $($R0)
       Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
        EndWait