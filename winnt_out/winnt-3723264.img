RD),$(OpSupport)},+
                                   {InstallDate,$(NoTitle),$(!REG_VT_DWORD),*($(Now),1)}}
                Shell  $(UtilityInf), AddValueList, $(HardNetCardKey), $(NewValueList)
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    goto ShellCodeError
                endif
                set NewValueList = {{BusNumber,$(NoTitle),$(!REG_VT_DWORD),$(BusNum)},+
                                {BusType,$(NoTitle),$(!REG_VT_DWORD),3},+
                                {McaPosId,$(NoTitle),$(!REG_VT_DWORD),$(McaPosId)},+
                                {CardType,$(NoTitle),$(!REG_VT_DWORD),2},+
                                {MediaType,$(NoTitle),$(!REG_VT_DWORD),1},+
                                {SlotNumber,$(NoTitle),$(!REG_VT_DWORD),$(SlotNum)}}
                Shell  $(UtilityInf), AddValueList, $(HardParameterKey), $(NewValueList)
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    goto ShellCodeError
                endif
                ifint $(McaPosId) == 24863
                    ifstr(i) $(!STF_GUI_UNATTENDED) == "YES"
                        Shell $(UtilityInf),AddDefaultNetCardParameters,$(HardParameterKey)
                    else
                        GetRegValue $(HardParameterKey),"InterruptNumber", InterruptNumberInfo
                        set IRQValue = *($(IRQList),~($(IRQList), *($(InterruptNumberInfo),4)))
                        GetRegValue $(HardParameterKey),"IOBaseAddress", IOBaseInfo
                        set IOBaseAddress = *($(IOBaseAddrHexList),~($(IOBaseAddrDecList), *($(IOBaseInfo),4)))
                        read-syms FileDependentDlg$(!STF_LANGUAGE)
                        ui start "Config"
                        ifstr(i) $(DLGEVENT) == "CONTINUE"
                            set IRQValue = $(Combo1Out)
                            set IOBaseAddress = $(Combo2Out)
                            set IOBaseAddrValue = *($(IOBaseAddrDecList), ~($(IOBaseAddrHexList),+
                                $(IOBaseAddress)))
                            SetRegValue $(HardParameterKey) {InterruptNumber,$(NoTitle),$(!REG_VT_DWORD),$(IRQValue)}
                            SetRegValue $(HardParameterKey) {IOBaseAddress,$(NoTitle),$(!REG_VT_DWORD),$(IOBaseAddrValue)}
                            ui pop 1
                        else
                            ui pop 1
                        endif
                    endif
                endif
                set TempProdName = """"$(ProductHardwareName)$(AdapterNumber)""""
                set TempBindForm = $(TempProdName)$(NetRuleHardwareBindForm)
                set NewValueList = {{type,$(NoTitle),$(!REG_VT_SZ),$(NetRuleHardwareType)},+
                                    {bindform,$(NoTitle),$(!REG_VT_SZ),$(TempBindForm)}, +
                                    {class,$(NoTitle),$(!REG_VT_MULTI_SZ),$(NetRuleHardwareClass)}, +
                                    {InfOption,$(NoTitle),$(!REG_VT_SZ),$(Option)}}
                Shell  $(UtilityInf), AddValueList, $(HardNetRuleKey), $(NewValueList)
                CloseRegKey $(HardNetCardKey)
                CloseRegKey $(HardNetRuleKey)
                CloseRegKey $(HardParameterKey)
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    goto ShellCodeError
                endif
         endif
    EndForListDo
    goto writeparameters
writeparameters = +
    EndWait
    goto successful
bindingadapter =+
    set Error = "Binding: Not Implmemented yet"
    goto fatal
removeadapter = +
    Ifstr(i) $(ProductKeyName) == $(!NTN_RegBase)
        Shell $(UtilityInf), RemoveSoftwareComponent, $(Manufacturer), +
            $(ProductSoftwareName)
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            Debug-Output "ShellCode error"
            goto ShellCodeError
        endif
        set RegistryErrorIndex = $($R0)
        Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
            goto fatalregistry
        endif
    else
        Shell $(UtilityInf