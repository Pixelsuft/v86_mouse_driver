t StartLabel = configureadapter
    else
        set StartLabel = installadapter
        set REMOVE_SOFTWARE = TRUE
        set REMOVE_HARDWARE = {}
                Set RemoveOnError = TRUE
    endif
    goto $(StartLabel)
installadapter = +
    OpenRegKey $(!REG_H_LOCAL) "" $(ProductKeyName) $(MAXIMUM_ALLOWED) KeyProduct
    Ifstr $(KeyProduct) != $(KeyNull)
        GetRegValue $(KeyProduct) $(MajorVersion) VersionInfo
        set VersionMajor = *($(VersionInfo), 4)
        GetRegValue $(KeyProduct) $(MinorVersion) VersionInfo
        set VersionMinor = *($(VersionInfo), 4)
        set InstalledVersion = $(VersionMajor)"."$(VersionMinor)
        ifstr(i) $(ProductVersion) == $(InstalledVersion)
            read-syms MiscErrorString1$(!STF_LANGUAGE)
            Set Text = $(Version)$(ProductVersion)
            Shell $(SubInf), SetupMessage $(!STF_LANGUAGE) "NONFATAL" $(Text)$(ErrorString)
            goto end
        EndIf
    EndIf
   ifstr(i) $(!NTN_InstallMode) == "install"
          Ifstr(i) $(!DoCopy) == "YES"
                 Shell $(UtilInf), DoAskSource, $(!STF_CWDDIR), $(SrcDir) YES
                 Ifint $($ShellCode) != $(!SHELL_CODE_OK)
                        Goto ShellCodeError
                 Else-Ifstr(i) $($R0) == STATUS_FAILED
                        Shell $(UtilInf) RegistryErrorString "ASK_SOURCE_FAIL"
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                           goto ShellCodeError
                        endif
            set Error = $($R0)
            Goto end
                 Else-Ifstr(i) $($R0) == STATUS_USERCANCEL
                        Goto end
                 Endif
                 Set SrcDir  = $($R1)
          Endif
   Endif
adapteroptions = +
    Shell $(UtilInf), MCAFindBus, $(LT200MC_1BYTE), $(LT200MC_2BYTE)
    ifstr(i) $($R0) != "NO_ERROR"
       set Error = $($R0)
      goto fatal
    endif
    ifint $($ShellCode) != 0
          goto ShellCodeError
    endif
    ifstr(i) $($R1) == {}
        read-syms MiscErrorString2$(!STF_LANGUAGE)
        Shell $(SubInf) SetupMessage $(!STF_LANGUAGE) "NONFATAL" $(ErrorString)
        goto usercancel
    endif
    set AdapterList = $($R1)
installproduct = +
    install "Install-Initial"
    ifstr(i) $(STF_INSTALL_OUTCOME) != STF_SUCCESS
        goto usercancel
    Endif
    Set FLibraryErrCtl = 1
    Shell $(UtilInf), AddSoftwareComponent, $(Manufacturer),+
                  $(ProductSoftwareName), +
                  $(ProductSoftwareName), +
                  $(ProductSoftwareName), +
                  $(ProductInfName),+
                  $(ProductSoftwareImagePath),+
                  "kernel", "NDIS", {}, "", $(ProductEventDll)
    ifint $($ShellCode) != 0
        goto ShellCodeError
    endif
    set RegistryErrorIndex = $($R0)
    set KeyProduct      = $($R1)
    Set SoftNetRulesKey = $($R2)
    CloseRegKey $($R3)
    CloseRegKey $($R4)
    CloseRegKey $($R5)
    Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
        CloseRegKey $(KeyProduct)
        CloseRegKey $(SoftNetRulesKey)
        goto fatalregistry
    endif
    set NewValueList = {{SoftwareType,0,$(!REG_VT_SZ),$(SoftwareType)},+
                       {MajorVersion,0,$(!REG_VT_DWORD),$(ProductMajorVersion)},+
                       {MinorVersion,0,$(!REG_VT_DWORD),$(ProductMinorVersion)},+
                       {Title,0,$(!REG_VT_SZ),$(ProductSoftwareTitle)},+
                       {Description,0,$(!REG_VT_SZ),$(ProductSoftwareDescription)},+
                       {PathName,0,$(!REG_VT_SZ),$(!STF_WINDOWSSYSPATH)},+
                       {ServiceName,0,$(!REG_VT_SZ),$(ProductSoftwareName)},+
                       {InstallDate,0,$(!REG_VT_DWORD),*($(Now),1)}}
    Shell   $(UtilInf), AddValueList, $(KeyProduct), $(NewValueList)
    ifint $($ShellCode) != 0
        goto ShellCodeError
    endif
    set RegistryErrorIndex = $($R0)
    Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
        CloseRegKey $(KeyProduct)
        CloseRegKey $(SoftNetRulesKey)
        goto fatalr