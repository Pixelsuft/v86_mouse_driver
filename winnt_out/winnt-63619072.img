istry
	    endif
        set iSearch = 1
nextnetcard = +
        Shell $(UtilityInf), FindNextNetworkCard, $(ProductHardwareName), $(iSearch)
        set KeyNetcard = $($R0)
        set iSearch = $($R1)
        Debug-Output "OemNadEp.Inf: FindNextNetworkCard "$(KeyNetcard)","$(iSearch)
        Ifstr $(KeyNetcard) != $(KeyNull)
            Debug-Output "OemNadEp.Inf: Setting OperationsSupport value"
            SetRegValue $(KeyNetcard) {OperationsSupport,$(NoTitle),$(!REG_VT_DWORD),$(ProductOpSupport)}
            CloseRegKey $(KeyNetcard)
            goto nextnetcard
        Endif
    else
        set Error          = ""
        set OEM_ABANDON_ON = FALSE
        goto Not_Supported
    endif
    EndWait
    goto End
Successful = +
    goto End
Abandon = +
    ForListDo $(OEM_ABANDON_OPTIONS)
	Shell $(UtilityInf), RemoveHardwareComponent, $(Manufacturer), +
	    $(ProductSoftwareName), $($)        
	ifint $($ShellCode) != $(!SHELL_CODE_OK)
	    goto Shell_Code_Error
	endif
	set RegistryErrorIndex = $($R0)
	Ifstr(i) $(RegistryErrorIndex) != NO_ERROR
	    goto Fatal_Registry
	endif
    EndForListDo
    ifstr(i) $(OEM_ABANDON_SOFTWARE) == TRUE
	Shell $(UtilityInf), RemoveSoftwareComponent, $(Manufacturer), +
	    $(ProductSoftwareName), FALSE
	ifint $($ShellCode) != $(!SHELL_CODE_OK)
	    goto Shell_Code_Error
	endif
	set RegistryErrorIndex = $($R0)
	ifstr(i) $(RegistryErrorIndex) != NO_ERROR
	    goto Fatal_Registry
	endif
    endif
    goto End
Warning = +
    EndWait
    Shell $(SubroutineInf) SetupMessage, $(!STF_LANGUAGE), "WARNING", $(Error)
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
	goto Shell_Code_Error
    endif
    ifstr(i) $($R1) == "OK"
	goto $(To)
    else-ifstr(i) $($R1) == "CANCEL"
	goto $(From)
    endif
    goto End
Non_Fatal_Info = +
    set Severity     = STATUS
    set CommonStatus = STATUS_USERCANCEL
    goto Non_Fatal_Msg
Non_Fatal = +
    set  Severity = NONFATAL
    goto Non_Fatal_Msg
Non_Fatal_Msg = +
    EndWait
    ifstr(i) $(Error) == ""
	set Severity = NONFATAL
	Shell $(UtilityInf) RegistryErrorString "SETUP_FAIL"
	ifint $($ShellCode) != $(!SHELL_CODE_OK)
	    goto Shell_Code_Error
	endif
	set Error = $($R0)
    endif
    Shell $(SubroutineInf) SetupMessage, $(!STF_LANGUAGE), "NONFATAL", $(Error)
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
	goto Shell_Code_Error
    endif
    ifstr(i) $($R1) == "OK"
	goto $(From)
    endif
    goto End
Fatal_Registry = +
    Shell $(UtilityInf) RegistryErrorString $(RegistryErrorIndex)
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
	goto Shell_Code_Error
    endif
    set Error = $($R0)
    goto Fatal
fataldetect = +
    Debug-Output "At fataldetect"
    Shell $(UtilityInf),RegistryErrorString,CANNOT_DETECT
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
        Debug-Output "ShellCode error: cannot get an error string."
        goto ShellCodeError
    endif
    set Error = $($R0)
    Goto fatal
Fatal = +
    EndWait
    ifstr(i) $(Error) == ""
	Shell $(UtilityInf) RegistryErrorString "SETUP_FAIL"
	ifint $($ShellCode) != $(!SHELL_CODE_OK)
	    goto Shell_Code_Error
	endif
	set Error = $($R0)
    endif
    Shell $(SubroutineInf) SetupMessage, $(!STF_LANGUAGE), "FATAL", $(Error)
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
	goto Shell_Code_Error
    endif
    goto Set_Failed
Not_Supported = +
    EndWait
    ifstr(i) $(Error) == ""
	Shell $(UtilityInf) RegistryErrorString "OPERATION_UNIMPLEMENTED"
	ifint $($ShellCode) != $(!SHELL_CODE_OK)
	    goto Shell_Code_Error
	endif
	set Error = $($R0)
    endif
    Shell $(SubroutineInf) SetupMessage, $(!STF_LANGUAGE), "FATAL", $(Error)
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
	goto Shell_Code_Error
    endif
    goto End
Shell_Code_Error = +
    EndWait
    set DlgType      = "MessageBox"
    set STF_MB_TITLE = $(ShellCodeErrorTitle)
    set STF_MB_TEXT  = $(ShellCodeErrorText)
    set STF_MB_TYPE  = 1
    set STF_MB_ICON  = 3
    set STF_MB_DEF   = 1
    ui start "Error Message"
    g