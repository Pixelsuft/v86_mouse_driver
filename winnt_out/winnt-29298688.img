[Identification]
    OptionType = NetService
[Options]
    NETMON
    NETMONTOOLS
[FileConstants]
UtilityInf      = "UTILITY.INF"
subroutineinf   = "SUBROUTN.INF"
SoftwareType    = "service"
Exit_Code       = 0
NetEventDLL     = "%SystemRoot%\System32\netevent.dll"
Manufacturer    = "Microsoft"
ProductMajorVersion     = "4"
ProductMinorVersion     = "0"
ProductVersion  = $(ProductMajorVersion)"."$(ProductMinorVersion)
ProductOpSupport     = 132 
ProductSoftwareName     = "bh"
ProductSoftwareImagePath = "\SystemRoot\System32\drivers\bhnt.sys"
NetRuleSoftwareType     = "bloodhound ndisTransport bhService"
NetRuleSoftwareClass    = {"bhService ndisTransport"}
NetRuleSoftwareUse      = "transport yes yes"
NetRuleSoftwareBindForm = """bh"" yes yes simple"
ProductNMAgentName	= "nmagent"
ProductNMAgentImagePath	= "%SystemRoot%\System32\nmagent.exe"
ProductNMAgentSvcType	= "service"
ProductKeyName  = $(!NTN_SoftwareBase)"\"$(Manufacturer)"\"$(ProductSoftwareName)"\CurrentVersion"
ParamKeyName    = $(!NTN_ServiceBase)"\"$(ProductSoftwareName)"\Parameters"
ServiceKeyName    = $(!NTN_ServiceBase)"\"$(ProductSoftwareName)
NMAgentKeyName    = $(!NTN_ServiceBase)"\"$(ProductNMAgentName)
[GeneralConstants]
from      = ""
to        = ""
ExitCodeOk     = 0
ExitCodeCancel = 1
ExitCodeFatal  = 2
KeyNull         = ""
MAXIMUM_ALLOWED   = 33554432
RegistryErrorIndex = NO_ERROR
KeyProduct      = ""
KeyParameters   = ""
TRUE            = 1
FALSE           = 0
NoTitle            = 0
ExitState   = "Active"
OldVersionExisted = $(FALSE)
DriverPath      = $(!STF_NTPATH)\drivers
[date]
    Now = {} ? $(!LIBHANDLE) GetSystemDate
[Identify]
    read-syms Identification
    set Status     = STATUS_SUCCESSFUL
    set Identifier = $(OptionType)
    set Media      = #("Source Media Descriptions", 1, 1)
    Return $(Status) $(Identifier) $(Media)
[ReturnOptions]
    set Status        = STATUS_FAILED
    set OptionList     = {}
    set OptionTextList = {}
    set LanguageList = ^(LanguagesSupported, 1)
    Ifcontains(i) $($0) in $(LanguageList)
        goto returnoptions
    else
        set Status = STATUS_NOLANGUAGE
        goto finish_ReturnOptions
    endif
returnoptions = +
    set AllOptionsList     = ^(Options, 1)
    set AllOptionsTextList = ^(OptionsText$($0), 1)
    ifstr(i) $(!STF_PRODUCT) == "WINNT"
        set OptionList = >({}, *($(AllOptionsList),1))
        set OptionTextList = >({}, *($(AllOptionsTextList), 1))
    else
        set OptionList = $(AllOptionsList)
        set OptionTextList = $(AllOptionsTextList)
    endif
    set Status         = STATUS_SUCCESSFUL
finish_ReturnOptions = +
    Return $(Status) $(OptionList) $(OptionTextList)
[InstallOption]
    set Option   = $($1)
    set AddCopy  = $($3)
    set DoCopy   = $($4)
    set DoConfig = $($5)
    Split-String $($2), "\", lSrcDirParts
    QueryListSize cSrcDirParts $(lSrcDirParts)
    ifstr(i) *($(lSrcDirParts),$(cSrcDirParts)) != "\"
        Set SrcDir = $($2)"\"
    else
        Set SrcDir = $($2)
    Endif
    set LanguageList = ^(LanguagesSupported, 1)
    Ifcontains(i) $($0) NOT-IN $(LanguageList)
        Return STATUS_NOLANGUAGE
    endif
    Debug-Output "OEMNSVBH.INF: STF_CWDDIR is: "$(!STF_CWDDIR)
    Debug-Output "OEMNSVBH.INF: STF_LANGUAGE is: "$(!STF_LANGUAGE)
    set-subst LF = "\n"
    read-syms GeneralConstants
    read-syms FileConstants
    read-syms DialogConstants$(!STF_LANGUAGE)
    ifstr(i) $(!NTN_Origination) == "NCPA"
        set Continue = $(OK)
    endif
    read-syms FileConstants$(!STF_LANGUAGE)
    read-syms $(Option)Constants$(!STF_LANGUAGE)
    detect date
    set-title  $(FunctionTitle)
    set to   = Begin
    set from = Begin
    set CommonStatus = STATUS_SUCCESSFUL
    EndWait
Begin = +
    Ifstr(i) $(!NTN_InstallMode) == deinstall
        set StartLabel = removeadapter
    else-Ifstr(i) $(!NTN_InstallMode) == Update
        set StartLabel = UpgradeSoftware
    else-Ifstr(i) $(!NTN_InstallMode) == bind
        set StartLabel = bindi