  Goto adaptersetup
    Endif
    Set DetectedParams = $($R1)
    Debug-Output "OEMNADIN.INF: Calling Param_SetDefaults to merge detected params"
    Shell $(ParamInf) Param_SetDefaults $(DetectedParams)
    goto adaptersetup
configureadapter = +
    Ifstr $(KeyProduct) == $(KeyNull)
        OpenRegKey $(!REG_H_LOCAL) "" $(!NTN_RegBase) $(MAXIMUM_ALLOWED) KeyProduct
        Ifstr $(KeyProduct) == $(KeyNull)
            set RegistryErrorIndex = CANNOT_FIND_COMPONENT_SERVICE
            Debug-Output "Cannot find component product key"
            goto fatalregistry
        Endif
    Endif
    Debug-Output "INF: Shelling to FindService"
    Shell $(UtilityInf) FindService, $(KeyProduct)
    Ifint $($ShellCode) != $(!SHELL_CODE_OK)
        Debug-Output "INF: FindService shell failure"
        Goto ShellCodeError
    Endif
    Ifstr(i) $($R0) != NO_ERROR
        Debug-Output "INF: FindService Shell error: "$($R0)
        Goto fatalregistry
    endif
    set KeyParameters = $($R2)
    CloseRegKey $($R1)
    Ifstr $(KeyParameters) == $(KeyNull)
        set RegistryErrorIndex = CANNOT_FIND_COMPONENT_SERVICE
        Debug-Output "Cannot find component service"
        goto fatalregistry
    endif
    set OldVersionExisted = $(TRUE)
    set ValueName = ""
    set ValueData = ""
    set ValueStr  = ""
    set ValueList = {}
    EnumRegValue $(KeyParameters) ValueList
    ForListDo $(ValueList)
        set ValueItem = $($)
        set ValueName = *($(ValueItem),1)
        set ValueData = *($(ValueItem),4)
        Ifstr(i) $(ValueName) == "InterruptNumber"
            set IRQValue = $(ValueData)
        else-ifstr(i) $(ValueName) == "IoBaseAddress"
            set IOBaseAddrValue = $(ValueData)
        else-ifstr(i) $(ValueName) == "IoChannelReady"
            set IOReady = $(ValueData)
        else-ifstr(i) $(ValueName) == "Transceiver"
            set Transceiver = $(ValueData)
        else-ifstr(i) $(ValueName) == "BusType"
            set BusInterfaceType = $(ValueData)
        else-ifstr(i) $(ValueName) == "BusNumber"
            set BusNumber = $(ValueData)
        endif
    EndForListDo
    ifstr(i) $(IRQValue) == ""
        set IRQValue = *($(IRQList), 2)
    endif
    ifstr(i) $(IOBaseAddrValue) == ""
        set IOBaseAddrValue = *($(IOBaseAddrDecList), 1)
    endif
    ifstr(i) $(Transceiver) == $(Transceiver1)
        set Transceiver = 1
    else-ifstr(i) $(Transceiver) == $(Transceiver2)
        set Transceiver = 2
    else-ifstr(i) $(Transceiver) == $(Transceiver3)
        set Transceiver = 3
    endif
adaptersetup =+
    Shell $(ParamInf) Param_ParameterConfidence
    Ifstr(i) $($R0) != STATUS_SUCCESSFUL
        Debug-Output "OEMNADE2.INF: parameter confidence too low to bypass configuration"
        Goto adapteroptions
    Endif
    Ifstr(i) $(DetectedCard) == TRUE
        Ifstr(i) $(!STF_INSTALL_MODE) != CUSTOM
            set BusInterfaceType = *($(!STF_NCDETINFO),5)
            set BusNumber = *($(!STF_NCDETINFO),6)
            Goto adapterverify
        Endif
    Endif
    goto adapteroptions
adapteroptions = +
    ifstr(i) $(!STF_GUI_UNATTENDED) == "YES"
        ifstr(i) $(!AutoNetInterfaceType) != ""
            set BusInterfaceType = $(!AutoNetInterfaceType)
        else
            set BusInterfaceType = 1    
        endif
        ifstr(i) $(!AutoNetBusNumber) != ""
            set BusNumber = $(!AutoNetBusNumber)
        else
            set BusNumber = 0
        endif
        goto adapterverify
    endif
    Ifint $(IOReady) == 1
        Set AllowEarly = 1
    Endif
    set from = adapteroptions
    set IOBaseAddress = *($(IOBaseAddrHexList), ~($(IOBaseAddrDecList),+
        $(IOBaseAddrValue)))
    set IOReadyValue = *($(IOReadyList), $(IOReady))
    set TransceiverValue = *($(TransceiverList), $(Transceiver))
    Ifint $(AllowEarly) == 0
       Set IOReadyListDisplay = $(IOReadyListShort)
    Else
       Set IOReadyListDisplay = $(IOReadyList)
    Endif
    read-syms FileDependentDlg$(!STF_LANGUAG